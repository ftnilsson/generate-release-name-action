"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AwesomeReleaseNameGenerator = void 0;
var nouns_1 = require("./nouns");
var adjectives_1 = require("./adjectives");
var AwesomeReleaseNameGenerator = /** @class */ (function () {
    function AwesomeReleaseNameGenerator(delimiter, length, appendText, useToken, capitalize) {
        if (delimiter === void 0) { delimiter = '-'; }
        if (length === void 0) { length = 2; }
        if (appendText === void 0) { appendText = ''; }
        if (useToken === void 0) { useToken = false; }
        if (capitalize === void 0) { capitalize = false; }
        this.delimiter = '-';
        this.length = 2;
        this.appendText = '';
        this.useToken = false;
        this.capitalize = false;
        this.delimiter = delimiter;
        this.length = length;
        this.appendText = appendText;
        this.useToken = useToken;
        this.capitalize = capitalize;
    }
    AwesomeReleaseNameGenerator.prototype.generate = function () {
        var _this = this;
        var generated = [];
        var addString = function (word) {
            if (word === '')
                return;
            var w = word.toLowerCase().replace(' ', '_');
            if (_this.capitalize)
                w = word.charAt(0).toUpperCase() + word.slice(1);
            generated.push("".concat(w));
        };
        for (var i = 0; i < this.length - 1; i++) {
            addString(nouns_1.nouns[getRandomInt(nouns_1.nouns.length)]);
        }
        addString(adjectives_1.adjectives[getRandomInt(adjectives_1.adjectives.length)]);
        addString(this.appendText);
        var generateToken = function () {
            return Math.random().toString(36).substring(2);
        };
        if (this.useToken)
            generated.push(generateToken());
        return generated.join(this.delimiter);
    };
    return AwesomeReleaseNameGenerator;
}());
exports.AwesomeReleaseNameGenerator = AwesomeReleaseNameGenerator;
var getRandomInt = function (max) {
    return Math.floor(Math.random() * max);
};
